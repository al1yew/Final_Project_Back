@model ProductDetailVM

@{
    var product = Model.Product;
}

<span class="closemodal">
    <ion-icon name="close-circle"></ion-icon>
</span>
<p class="firstp col-lg-12 col-12 dontclose">PRODUCT REVIEWS</p>

<div class="col-lg-12 col-12 rating ratingfetch dontclose">
    <div class="col-lg-6 col-5 left ">
        <span class="avgrating">@Math.Round(product.AverageRating, 1)</span>
        <div class="stardiv">
            @for (int i = 0; i < Math.Round(product.AverageRating); i++)
            {
                <ion-icon name="star" class="staricon yellow"></ion-icon>
            }
            @for (int i = 0; i < 5 - Math.Round(product.AverageRating); i++)
            {
                <ion-icon name="star-outline" class="staricon"></ion-icon>
            }
        </div>
    </div>
    <div class="col-lg-6 col-7 right">
        <span class="reviewcount"><span class="revcount2">@product.ReviewCount</span> reviews</span>
    </div>
</div>

<div class="col-lg-12 col-12 reviews dontclose" id="reviews">
    @foreach (var review in product.ProductReviews.OrderByDescending(x => x.LikesCount))
    {
        <div class="col-lg-12 col-12 review dontclose">

            <div class="col-lg-12 col-12 top">
                <div class="stardiv col-lg-1-2 col-3">
                    @for (int i = 0; i < Math.Round(review.Rating); i++)
                    {
                        <ion-icon name="star" class="staricon yellow"></ion-icon>
                    }
                    @for (int i = 0; i < 5 - Math.Round(review.Rating); i++)
                    {
                        <ion-icon name="star-outline" class="staricon"></ion-icon>
                    }
                </div>
                <p class="col-lg-7 col-12">
                    @review.Review
                </p>
                <div class="col-lg-3 col-6 reviewphotos dontclose">
                    @if (review.ReviewImages != null && review.ReviewImages.Count > 0)
                    {
                        @foreach (var img in review.ReviewImages)
                        {
                            <div class="photokeeper col-3 col-lg-3 photomodal">
                                <img class="img-fluid" src="~/assets/images/reviews/@review.ProductId/@img.Image" alt="">
                            </div>
                        }
                    }
                </div>
            </div>

            <div class="col-lg-12 col-12 bottom">
                <div class="col-lg-1-5 name">
                    @review.Author
                </div>
                <div class=" reviewdate">
                    @review.PublishDate.ToShortDateString()
                </div>
                @if (User.Identity.IsAuthenticated)
                {
                    <a asp-controller="Shop" asp-action="Like" asp-route-id="@review.Id" class="layk">
                        <svg viewBox="0 0 20 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M19.3475 11.0677C19.7675 10.5013 20 9.80738 20 9.08535C20 7.9398 19.3725 6.85548 18.3625 6.25081C18.1025 6.09517 17.8064 6.01325 17.505 6.01354H11.51L11.66 2.87793C11.695 2.12019 11.4325 1.40071 10.9225 0.852168C10.6722 0.581797 10.3703 0.36668 10.0353 0.220111C9.70032 0.0735421 9.33946 -0.001365 8.975 1.88293e-05C7.675 1.88293e-05 6.525 0.892989 6.18 2.17121L4.0325 10.1059H0.8C0.3575 10.1059 0 10.4707 0 10.9223V20.2092C0 20.6608 0.3575 21.0256 0.8 21.0256H15.8325C16.0625 21.0256 16.2875 20.9797 16.495 20.8879C17.685 20.3699 18.4525 19.1836 18.4525 17.8671C18.4525 17.5456 18.4075 17.2292 18.3175 16.9231C18.7375 16.3567 18.97 15.6627 18.97 14.9407C18.97 14.6192 18.925 14.3029 18.835 13.9967C19.255 13.4303 19.4875 12.7363 19.4875 12.0143C19.4825 11.6928 19.4375 11.3739 19.3475 11.0677ZM1.8 19.1887V11.9429H3.825V19.1887H1.8ZM17.71 10.1824L17.1625 10.6672L17.51 11.3152C17.6245 11.5287 17.6838 11.7684 17.6825 12.0117C17.6825 12.4327 17.5025 12.8333 17.1925 13.1088L16.645 13.5936L16.9925 14.2416C17.107 14.4551 17.1663 14.6948 17.165 14.9381C17.165 15.3591 16.985 15.7597 16.675 16.0352L16.1275 16.52L16.475 17.168C16.5895 17.3815 16.6488 17.6212 16.6475 17.8645C16.6475 18.436 16.3175 18.9514 15.8075 19.1861H5.425V11.8612L7.9125 2.66362C7.97664 2.42788 8.11433 2.2199 8.30471 2.07119C8.49508 1.92248 8.72777 1.84116 8.9675 1.83954C9.1575 1.83954 9.345 1.89567 9.495 2.01048C9.7425 2.19928 9.875 2.48503 9.86 2.78864L9.62 7.8505H17.48C17.925 8.1286 18.2 8.59805 18.2 9.08535C18.2 9.50632 18.02 9.90433 17.71 10.1824Z"
                                  fill="black" />
                        </svg>
                    </a>
                }
                <span class="likescount">
                    <span class="likecount">@review.LikesCount</span> likes
                </span>
            </div>
        </div>
    }
</div>


@if (Model.CanWrite && User.Identity.IsAuthenticated)
{
    <div class="col-lg-12 col-12 writereview dontclose">
        @await Html.PartialAsync("_WriteReviewPartial", Model.WriteReviewVM)
    </div>
}